<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="145851" started-at="2017-06-26T19:44:14Z" finished-at="2017-06-26T19:46:40Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="145851" started-at="2017-06-26T19:44:14Z" finished-at="2017-06-26T19:46:40Z">
      <class name="com.vh.ui.tests.MedicalEquipmentTest">
        <test-method status="PASS" signature="buildUp()[pri:0, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e]" name="buildUp" is-config="true" duration-ms="65067" started-at="2017-06-26T14:44:14Z" finished-at="2017-06-26T14:45:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildUp -->
        <test-method status="PASS" signature="verify_MedicalEquipmentPage()[pri:1, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e]" name="verify_MedicalEquipmentPage" duration-ms="5622" started-at="2017-06-26T14:45:19Z" finished-at="2017-06-26T14:45:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_MedicalEquipmentPage -->
        <test-method status="PASS" signature="afterTest(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e]" name="afterTest" is-config="true" duration-ms="3" started-at="2017-06-26T14:45:25Z" finished-at="2017-06-26T14:45:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.vh.ui.tests.MedicalEquipmentTest.verify_MedicalEquipmentPage() throws com.vh.ui.exceptions.WaitException,com.vh.ui.exceptions.URLNavigationException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verify_MedicalEquipmentPage status=SUCCESS method=MedicalEquipmentTest.verify_MedicalEquipmentPage()[pri:1, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="verify_AddMedicalEquipmentPopup()[pri:2, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e]" name="verify_AddMedicalEquipmentPopup" duration-ms="28961" started-at="2017-06-26T14:45:25Z" finished-at="2017-06-26T14:45:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_AddMedicalEquipmentPopup -->
        <test-method status="PASS" signature="afterTest(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e]" name="afterTest" is-config="true" duration-ms="1" started-at="2017-06-26T14:45:54Z" finished-at="2017-06-26T14:45:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.vh.ui.tests.MedicalEquipmentTest.verify_AddMedicalEquipmentPopup() throws com.vh.ui.exceptions.WaitException,com.vh.ui.exceptions.URLNavigationException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verify_AddMedicalEquipmentPopup status=SUCCESS method=MedicalEquipmentTest.verify_AddMedicalEquipmentPopup()[pri:2, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="AddMedicalEquipment()[pri:3, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e]" name="AddMedicalEquipment" duration-ms="8505" started-at="2017-06-26T14:45:54Z" finished-at="2017-06-26T14:46:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddMedicalEquipment -->
        <test-method status="PASS" signature="afterTest(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e]" name="afterTest" is-config="true" duration-ms="1" started-at="2017-06-26T14:46:02Z" finished-at="2017-06-26T14:46:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.vh.ui.tests.MedicalEquipmentTest.AddMedicalEquipment() throws com.vh.ui.exceptions.WaitException,com.vh.ui.exceptions.URLNavigationException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=AddMedicalEquipment status=SUCCESS method=MedicalEquipmentTest.AddMedicalEquipment()[pri:3, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="verify_EditableFields()[pri:4, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e]" name="verify_EditableFields" duration-ms="4729" started-at="2017-06-26T14:46:02Z" finished-at="2017-06-26T14:46:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_EditableFields -->
        <test-method status="PASS" signature="afterTest(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e]" name="afterTest" is-config="true" duration-ms="1" started-at="2017-06-26T14:46:07Z" finished-at="2017-06-26T14:46:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.vh.ui.tests.MedicalEquipmentTest.verify_EditableFields() throws com.vh.ui.exceptions.WaitException,com.vh.ui.exceptions.URLNavigationException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verify_EditableFields status=SUCCESS method=MedicalEquipmentTest.verify_EditableFields()[pri:4, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="FAIL" signature="verify_ColumnSorting()[pri:5, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e]" name="verify_ColumnSorting" duration-ms="30743" started-at="2017-06-26T14:46:07Z" finished-at="2017-06-26T14:46:38Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The SOURCE column did not sort descendingly expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The SOURCE column did not sort descendingly expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at com.vh.ui.tests.MedicalEquipmentTest.verify_ColumnSorting(MedicalEquipmentTest.java:170)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_ColumnSorting -->
        <test-method status="PASS" signature="afterTest(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e]" name="afterTest" is-config="true" duration-ms="427" started-at="2017-06-26T14:46:38Z" finished-at="2017-06-26T14:46:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.vh.ui.tests.MedicalEquipmentTest.verify_ColumnSorting() throws com.vh.ui.exceptions.WaitException,com.vh.ui.exceptions.URLNavigationException,java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verify_ColumnSorting status=FAILURE method=MedicalEquipmentTest.verify_ColumnSorting()[pri:5, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.vh.ui.tests.MedicalEquipmentTest@6088451e]" name="tearDown" is-config="true" duration-ms="1710" started-at="2017-06-26T14:46:38Z" finished-at="2017-06-26T14:46:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.vh.ui.tests.MedicalEquipmentTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
